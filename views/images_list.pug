extends layout

block title 
  title Image List

block content
  h1(class="text-4xl font-bold mb-8") Image List

  a(href="/image/upload" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded") Upload

  form(action="/image/search" method="GET" class="mt-6 mb-6 flex")
    input(type="text" id="search" name="search" placeholder="Search images by name" 
      class="w-full border border-gray-300 rounded-lg py-2 px-4 focus:outline-none focus:ring-2 focus:ring-blue-500" oninput="debounceSearch()")
    button(type="button" onClick="runSearch()" class="ml-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded") Search

  ul(class="space-y-4")
    each image in images
      li(class="flex items-center space-x-4")
        h3(class="text-lg font-semibold")
          a(href="#", onclick=`viewImage("${image.id}")` class="text-blue-600 hover:underline")= image.filename
        img(src=`data:image/jpeg;base64,${image.image.toString('base64')}`, alt=image.filename, width="200" 
          class="cursor-pointer border border-gray-300 rounded-lg hover:border-blue-500" onclick=`viewImage("${image.id}")`)

  script.
    async function viewImage(id) {
      const token = getCookie('token');

      try {
        const response = await fetch(`/image/${id}`, {
          method: 'GET',
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json',
          }
        });
        console.log(response);
        if (response.ok) {
          window.location.href = `/image/${id}`;
        } else {
          alert('Failed to view the image.');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('An error occurred while viewing the image.');
      }
    }

    let debounceTimer;
    function debounceSearch() {
      clearTimeout(debounceTimer);  // Clear the previous timer
      debounceTimer = setTimeout(runSearch, 300);  // Set a new timer (e.g., 300ms)
    }

    async function runSearch() {
      const searchQuery = document.getElementById('search').value;

      if (searchQuery.length < 2) {
        return;  // Do nothing if the search query has fewer than 2 characters
      }

      const token = getCookie('token');
      const response = await fetch(`/image/images_list?searchQuery=${encodeURIComponent(searchQuery)}`, {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });

      if (response.ok) {
        window.location.href = `/image/images_list?searchQuery=${encodeURIComponent(searchQuery)}`;
      } else {
        alert('Failed to search images.');
      }
    }

    function getCookie(name) {
      const value = `; ${document.cookie}`;
      const parts = value.split(`; ${name}=`);
      if (parts.length === 2) return parts.pop().split(';').shift();
      return null;
    }
